AWSTemplateFormatVersion: 2010-09-09
Description: >
  Bookstore Web API Application aims to create a bookstore web service using
  Docker 

  to have the understanding to dockerization of an application. 

  The application code is to be deployed as a RESTful web service with 

  Flask using Dockerfile and Docker Compose on AWS Elastic Compute Cloud (EC2)
  Instance 

  using AWS Cloudformation Service.

Parameters:
  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections.
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: Must one of the existing EC2 KeyPair

Resources:
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for Web Server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: My First Security Group

  WebServerHost:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0c94855ba95c71c99
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "Web Server of ${AWS::StackName}"
      UserData: !Base64
        "Fn::Sub": >
          #! /bin/bash

          yum update -y

          wget
          https://raw.githubusercontent.com/oraykamberoglu/cloudformation-containerization-bookstore-api/master/Dockerfile
          -P /home/ec2-user

          wget
          https://raw.githubusercontent.com/oraykamberoglu/cloudformation-containerization-bookstore-api/master/bookstore-api.py
          -P /home/ec2-user

          wget
          https://raw.githubusercontent.com/oraykamberoglu/cloudformation-containerization-bookstore-api/master/docker-compose.yml
          -P /home/ec2-user

          wget
          https://raw.githubusercontent.com/oraykamberoglu/cloudformation-containerization-bookstore-api/master/requirements.txt
          -P /home/ec2-user

          amazon-linux-extras install docker

          service docker start

          usermod -a -G docker ec2-user

          curl -L
          "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname
          -s)-$(uname -m)" -o /usr/local/bin/docker-compose

          chmod +x /usr/local/bin/docker-compose           

          ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

          cd /home/ec2-user

          docker build -t devoray/bookstore-api:latest .

          docker-compose up

Outputs:
  WebsiteURL:
    Description: BookStore Web API
    Value: !Sub
      - "http://${PublicAddress}"
      - PublicAddress: !GetAtt
          - WebServerHost
          - PublicDnsName
